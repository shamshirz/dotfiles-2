" Themes and colors
set background=dark
let g:airline_theme='solarized'
let g:airline_powerline_fonts = 1
colorscheme solarized

set scrolloff=4    " Keep at least 4 lines below/above cursor
set nocompatible   " Don't maintain compatibilty with Vi

" Performance
set lazyredraw
set ttyfast

" Default focused
set relativenumber
set cursorline
set cursorcolumn

" Focused vs unfocused splits
autocmd WinEnter * set relativenumber
autocmd WinLeave * set norelativenumber

autocmd WinEnter * set cursorline
autocmd WinEnter * set cursorcolumn
autocmd WinLeave * set nocursorline
autocmd WinLeave * set nocursorcolumn

" Superior home/end mappings
map 0 ^
map - $

" Automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" Zoom a vim pane, <C-w>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

nmap <leader>so :source $MYVIMRC<cr>

" Change cursor to line when in insert mode
set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
  \,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor
  \,sm:block-blinkwait175-blinkoff150-blinkon175
" https://github.com/neovim/neovim/wiki/FAQ#cursor-style-isnt-restored-after-exiting-nvim
au VimLeave * set guicursor=a:block-blinkon0

" Match to beginning and end of blocks with %
runtime macros/matchit.vim

set foldmethod=syntax " Fold using the wisdom of vim.ruby or similar
set nofoldenable      " Temporarily disable folding when file is first opened

" Bind `q` to close the buffer for help files
autocmd Filetype help nnoremap <buffer> q :q<CR>

" Disable inherited syntastic
let g:syntastic_mode_map = {
  \ "mode": "passive",
  \ "active_filetypes": [],
  \ "passive_filetypes": [] }

" Smart wrapping/indentation
set breakindent

" Explore the directory of the current file
nnoremap <leader>e :Dirvish %<CR>
" Explore the project root directory
nnoremap <leader>E :Dirvish .<CR>
" Enable Vim Fugitive in dirvish buffers
autocmd FileType dirvish call fugitive#detect(@%)

" Use ripgrep for ludicrous speed! Got this from
" https://elliotekj.com/2016/11/22/setup-ctrlp-to-use-ripgrep-in-vim/
set grepprg=rg\ --color=never

let g:ackprg = 'rg --vimgrep --smart-case'
nnoremap \ :Ack!<SPACE>
nnoremap <C-p> :Files<CR>

" Enable command history, as with Ctrl-P Vim plugin
let g:fzf_history_dir = '~/.local/share/fzf-history'

set wildignore+=*/.git/*,*/tmp/*,*.swp

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

let g:elm_format_autosave = 1 " Format on saving an Elm file
let g:elm_setup_keybindings = 0 " Don't use plugin-provided mappings

" Dash.vim
nmap <silent> <leader>d <Plug>DashSearch

" Make test commands execute using dispatch.vim
let test#strategy = "dispatch"

" Allow mouse input for all modes
set mouse=a

" Behavior for substitutions preview (e.g. `s/hey/hi/`)
set inccommand=split

" ALE options
let g:airline#extensions#ale#enabled = 1

" Set soft tabs to 4 spaces in Elm buffers
autocmd FileType elm setlocal tabstop=4 shiftwidth=4

" Clear search highlighting
nnoremap <Leader>n :noh<CR>

let g:rustfmt_autosave = 1

" Use j and k to navigate long wrapped lines as multiple lines
nnoremap k gk
nnoremap j gj

" Copy relative file path of current buffer to clipboard
noremap <silent> cp :let @+=expand("%")<CR>
" Copy absolute file path of current buffer to clipboard
noremap <silent> cP :let @+=expand("%:p")<CR>

augroup dirvish_config
  " Maintain fzf Ctrl-P functionality in Dirvish buffers
  autocmd FileType dirvish nnoremap <silent><buffer> <C-p> :Files<CR>
augroup END

" Ensure compatibility with vim-fugitive
let g:EditorConfig_exclude_patterns = ['fugitive://.*']
